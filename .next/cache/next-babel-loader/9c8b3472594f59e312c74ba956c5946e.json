{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/benjaminread/Developer/homeedhelpers-fe-v2/src/components/HandwritingPractice/HandwritingPractice.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar HandwritingPractice = function HandwritingPractice() {\n  _s();\n\n  var _React$useState = React.useState('Edit me!'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      message = _React$useState2[0],\n      useMessage = _React$useState2[1];\n\n  var font = 'KG Primary Dots';\n  var scale = 'large';\n  var textAlign = 'left';\n  var showLines = true;\n  var lines = [];\n\n  var linesList = function linesList() {\n    lines = message.split(\"\\n\").map(function (l) {\n      return l.trim();\n    });\n  };\n\n  var lineStyle = function lineStyle() {\n    return {\n      fontSize: scale === 'large' ? \"152px\" : \"40px\",\n      fontFamily: font,\n      lineHeight: scale === 'large' ? \"1.3\" : \"1.2\"\n    };\n  };\n\n  var printStyle = function printStyle() {\n    return {\n      textAlign: textAlign,\n      paddingTop: scale === 'large' ? \"40px\" : \"72px\"\n    };\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    id: \"edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"textarea\", {\n    value: message,\n    onChange: useMessage(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    id: \"font\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"dot\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Font: \"), __jsx(\"select\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, __jsx(\"option\", {\n    id: \"dot\",\n    value: \"KG Primary Dots\",\n    selected: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Primary\"), __jsx(\"option\", {\n    id: \"dot-line-cursive\",\n    value: \"Learning Curve Dashed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Dots lined Cursive\"))), __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"lines\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Show lines: \"), __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: showLines,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })), __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"align\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Align: \"), __jsx(\"select\", {\n    id: \"align\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, __jsx(\"option\", {\n    id: \"to-left\",\n    value: \"left\",\n    selected: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Left\"), __jsx(\"option\", {\n    id: \"to-center\",\n    value: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Center\"), __jsx(\"option\", {\n    id: \"to-right\",\n    value: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Right\"))), __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"scale\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Font Size\"), __jsx(\"select\", {\n    id: \"scale\",\n    value: scale,\n    onChange: printStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, __jsx(\"option\", {\n    id: \"large\",\n    value: \"large\",\n    selected: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Large\"), __jsx(\"option\", {\n    id: \"small\",\n    value: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Small\"))), true && __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 49\n    }\n  }, __jsx(\"button\", {\n    onClick: window.print,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Print\"))), __jsx(\"div\", {\n    id: \"printarea\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"section\", {\n    id: \"printarea__header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Student name: ______________________\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Date: ___________\")), lines && lines.map(function (line, index) {\n    return __jsx(\"p\", {\n      key: index,\n      className: \"scale\",\n      \"v-for\": \"line in lines\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: \"./images/handwriting-singleline-large.png\",\n      alt: \"lined background \",\n      \"v-if\": \"showLines === true && scale === 'large'\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }), __jsx(\"img\", {\n      src: \"./images/handwriting-singleline-small.png\",\n      alt: \"lined background \",\n      \"v-if\": \"showLines === true && scale === 'small'\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), line);\n  })));\n};\n\n_s(HandwritingPractice, \"66XIH85awFfQ2qYyDDrnpAME3n8=\", true);\n\n_c = HandwritingPractice;\nexport default HandwritingPractice;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandwritingPractice\");","map":{"version":3,"sources":["/Users/benjaminread/Developer/homeedhelpers-fe-v2/src/components/HandwritingPractice/HandwritingPractice.tsx"],"names":["React","HandwritingPractice","useState","message","useMessage","font","scale","textAlign","showLines","lines","linesList","split","map","l","trim","lineStyle","fontSize","fontFamily","lineHeight","printStyle","paddingTop","window","print","line","index"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst HandwritingPractice = () => {\n\n    const [message, useMessage] = React.useState('Edit me!')\n    const font = 'KG Primary Dots'\n    const scale = 'large'\n    const textAlign = 'left'\n    const showLines = true\n    let lines = []\n    \n    const linesList = function () {\n        lines = message\n            .split(\"\\n\")\n            .map(l => l.trim())\n    }\n    const lineStyle = function () {\n        return {\n            fontSize: scale === 'large' ?  `152px` : `40px`,\n            fontFamily: font,\n            lineHeight: scale === 'large' ?  `1.3` : `1.2`,\n        }\n    }\n    const printStyle = function () {\n        return {\n            textAlign: textAlign,\n            paddingTop: scale === 'large' ? `40px` : `72px`\n        }\n    }\n    return (\n        <div>\n            <div id=\"edit\">\n            <textarea value={message} onChange={useMessage()} />\n        </div>\n            <div id=\"font\">\n                <fieldset>\n                    <label htmlFor=\"dot\">Font: </label>\n                    <select>\n                    <option id=\"dot\" value=\"KG Primary Dots\" selected>Primary</option>\n                    <option id=\"dot-line-cursive\" value=\"Learning Curve Dashed\" >Dots lined Cursive</option>\n                </select>\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"lines\">Show lines: </label>\n                    <input type=\"checkbox\" checked={showLines} />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"align\">Align: </label>\n                    <select id=\"align\">\n                        <option id=\"to-left\" value=\"left\" selected>Left</option>\n                        <option id=\"to-center\" value=\"center\">Center</option>\n                        <option id=\"to-right\" value=\"right\">Right</option>\n                    </select>\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"scale\">Font Size</label>\n                    <select id=\"scale\" value={scale} onChange={printStyle}>\n                        <option id=\"large\" value=\"large\" selected>Large</option>\n                        <option id=\"small\" value=\"small\">Small</option>\n                    </select>\n                </fieldset>\n                {typeof window !== undefined && <fieldset>\n                    <button onClick={window.print}>Print</button>\n                </fieldset>}\n            </div>\n            <div id=\"printarea\">\n                <section id=\"printarea__header\">\n                    <p>Student name: ______________________</p>\n                    <p>Date: ___________</p>\n                </section>\n                {lines && lines.map((line, index) => (\n                    <p key={index} className=\"scale\" v-for=\"line in lines\" >\n                    <img src=\"./images/handwriting-singleline-large.png\" alt=\"lined background \" v-if=\"showLines === true && scale === 'large'\"/>\n                    <img src=\"./images/handwriting-singleline-small.png\" alt=\"lined background \" v-if=\"showLines === true && scale === 'small'\" />\n                    {line}\n                </p>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default HandwritingPractice\n"]},"metadata":{},"sourceType":"module"}